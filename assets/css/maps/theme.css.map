{"version":3,"sources":["vendor/_mini-reset.scss","theme.css","base/_typography.scss","base/_root.scss","abstracts/_media-queries.scss","base/_globals.scss","utility/_container.scss","utility/_images.scss","utility/_sr.scss","ui/_accordion.scss","ui/_buttons.scss"],"names":[],"mappings":"AACA,iBAGE,qBAAA,CACA,QAAA,CACA,SCCF,CDGA,4BAEE,eCCF,CDGA,kBACE,sBCCF,CDGA,KAGE,eAAA,CAFA,gBAAA,CACA,4BCEF,CDGA,eACE,gCAAA,CAAA,6BCCF,CDGA,YAEE,aAAA,CACA,cCCF,CDGA,6BAIE,YCCF,CDGA,uCACE,kBACE,oBCCF,CDEA,iBAIE,0CAAA,CAAA,kCAAA,CACA,6CAAA,CAAA,qCAAA,CACA,8BAAA,CAHA,mCCIF,CACF,CCzDA,KAEE,iCAAA,CACA,kCAAA,CAFA,eAAA,CAGA,6BAAA,CACA,0BAAA,CAEA,qBD2DF,CCxDA,KACE,gBD2DF,CCxDA,kBAME,eD2DF,CCxDA,mCAKE,eD2DF,CEzFA,MAEI,gBAAA,CAAA,gBAAA,CAKE,0BFwFN,CG/EE,0CDhBF,MAUQ,wBFyFN,CACF,CIpGA,KAEE,iBJuGF,CInGA,WALE,iBJ4GF,CK/GA,WAEE,WAAA,CACA,aAAA,CAEA,qCAAA,CADA,sCAAA,CAHA,ULsHF,CMpHA,8CAEE,WAAA,CACA,eAAA,CACA,yBAAA,CAAA,sBAAA,CAHA,UN6HF,CMnHA,cAGE,QAAA,CACA,eAAA,CAHA,iBAAA,CACA,UN4HF,CMvHA,UAKE,QAAA,CACA,MAAA,CAJA,iBAAA,CAEA,OAAA,CADA,KN6HF,CM7GE,2BAZA,mBAAA,CAAA,gBNgIF,CMpHE,mBAEE,qBARS,CAQT,kBNsHJ,CM/GA,eACE,iBNqHF,COvKA,SAQE,kBAAA,CADA,QAAA,CAJA,UAAA,CAEA,eAAA,CADA,SAAA,CAHA,iBAAA,CAKA,kBAAA,CAJA,SPgLF,CQhLA,WACE,mBRmLF,CQjLE,4BACE,iBRmLJ,CQhLE,6BAGE,kBAAA,CAMA,4BAAA,CACA,WAAA,CACA,cAAA,CATA,YAAA,CAKA,gBAAA,CADA,eAAA,CAFA,6BAAA,CAIA,eAAA,CAPA,iBAAA,CAIA,URwLJ,CQ5KE,sCACE,YAAA,CAEA,WAAA,CACA,uBAAA,CACA,yBAAA,CAHA,URiLJ,CQ1KI,6EACE,mBR4KN,CQvKI,4EACE,oBRyKN,CQrKE,+BAGE,sBAAA,CAFA,YAAA,CACA,qBAAA,CAEA,0BAAA,CACA,eAAA,CACA,yBRuKJ,CQpKE,4BAGE,gBAAA,CACA,kBAAA,CAFA,qBAAA,CADA,kBRyKJ,CQpKI,iDACE,kBRsKN,CSpOA,KACE,cAAA,CAGA,kBAAA,CAWA,cAAA,CAZA,YAAA,CAQA,sBAAA,CADA,cAAA,CAHA,aAAA,CAFA,sBAAA,CAOA,kBAAA,CAHA,yBAAA,CADA,0BAAA,CANA,iBAAA,CAWA,iBAAA,CACA,oBAAA,CAEA,mBAAA,CAVA,UTiPF,CSrOE,YAEE,iCAAA,CADA,sBTwOJ","file":"../theme.css","sourcesContent":["/* Box sizing rules, remove default margin and padding */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role=\"list\"],\nol[role=\"list\"] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  display: block;\n  max-width: 100%;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    transition-duration: 0.01ms !important;\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    scroll-behavior: auto !important;\n  }\n}\n","/* Box sizing rules, remove default margin and padding */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */\nul[role=list],\nol[role=list] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  display: block;\n  max-width: 100%;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n*::before,\n*::after {\n    transition-duration: 0.01ms !important;\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    scroll-behavior: auto !important;\n  }\n}\nhtml {\n  font-size: 62.5%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n  -moz-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n  text-size-adjust: 100%;\n}\n\nbody {\n  font-size: 1.6rem;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: 700;\n}\n\ninput,\nselect,\noption,\ntextarea,\nlabel {\n  font-weight: 400;\n}\n\n:root {\n  --clr-white: #fff;\n  --clr-black: #000;\n  --container-padding: 1.5rem;\n}\n@media only screen and (min-width: 1024px) {\n  :root {\n    --container-padding: 3rem;\n  }\n}\n\nbody {\n  position: relative;\n  overflow-x: hidden;\n}\n\n.main {\n  position: relative;\n}\n\n.container {\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n  padding-right: var(--container-padding);\n  padding-left: var(--container-padding);\n}\n\n/*\nPlaceholder image size class\n*/\n.image-fit-contain, .image-fit-cover, .ar-media {\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n  object-position: center;\n}\n\n/*\nconstant aspect ratio container/media (image/video)\ncontainer needs also extra added padding-top\n*/\n.ar-container {\n  position: relative;\n  width: 100%;\n  height: 0;\n  overflow: hidden;\n}\n\n.ar-media {\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  object-fit: cover;\n}\n\n/*\nMixins for image fitted inside container\n*/\n.image-fit-cover {\n  object-fit: cover;\n}\n\n.image-fit-contain {\n  object-fit: contain;\n}\n\n/*\nClass used for @iconfu/svg-inject library\n*/\nimg.injectable {\n  visibility: hidden;\n}\n\n.sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n}\n\n.accordion {\n  transition: all 250ms;\n}\n.accordion .accordion__item {\n  position: relative;\n}\n.accordion .accordion__title {\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n  font-weight: 600;\n  font-size: 1.4rem;\n  line-height: 1.2;\n  background-color: transparent;\n  border: none;\n  cursor: pointer;\n}\n.accordion .accordion__title__toggler {\n  display: flex;\n  width: 5rem;\n  height: 5rem;\n  transform-origin: center;\n  transition: transform 250ms;\n}\n.accordion .accordion__title[aria-expanded=false] .accordion__title__toggler {\n  transform: scaleY(1);\n}\n.accordion .accordion__title[aria-expanded=true] .accordion__title__toggler {\n  transform: scaleY(-1);\n}\n.accordion .accordion__content {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: flex-start;\n  overflow: hidden;\n  transition: all 200ms linear;\n}\n.accordion .accordion__text {\n  padding-top: 1.7rem;\n  padding-bottom: 1.7rem;\n  font-size: 1.2rem;\n  line-height: 1.8rem;\n}\n.accordion .accordion__text p:not(:last-of-type) {\n  margin-bottom: 1rem;\n}\n\n.btn {\n  --h-pad: 2.5rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 3.6rem;\n  padding-right: var(--h-pad);\n  padding-left: var(--h-pad);\n  font-size: 1rem;\n  font-family: sans-serif;\n  line-height: 1.2rem;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  transition: all 150ms;\n}\n.btn--black {\n  color: var(--clr-white);\n  background-color: var(--clr-black);\n}","@use '../abstracts' as *;\n\n// Here place @font-face for fonts used in this project.\n\nhtml {\n  font-size: 62.5%;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  -webkit-text-size-adjust: 100%;\n  -moz-text-size-adjust: 100%;\n  -ms-text-size-adjust: 100%;\n  text-size-adjust: 100%;\n}\n\nbody {\n  font-size: 1.6rem;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-weight: 700;\n}\n\ninput,\nselect,\noption,\ntextarea,\nlabel {\n  font-weight: 400;\n}\n","@use '../abstracts' as *;\n\n:root {\n  @each $name, $color in $colors {\n    --clr-#{\"\" + $name}: #{$color};\n  }\n\n  @each $name, $size in $container-padding {\n    @if $name == mobile {\n      --container-padding: #{$size};\n    } @else if $name == desktop {\n      @include screen(desktop) {\n        --container-padding: #{$size};\n      }\n    }\n  }\n}\n","// The container horizontal gap, which acts as the offset for breakpoints\n$gap: 32px;\n\n// prettier-ignore\n$breakpoints: (\n  smobile: 360px, // $smobile: 360px;\n  mobile: 576px, // $mobile: 576px;\n  tablet: 768px, // $tablet: 768px;\n  desktop: 960px + (2 * $gap), // $desktop: 960px + (2 * $gap);\n  widescreen: 1212px + (2 * $gap), // $widescreen: 1212px + (2 * $gap);\n  fullhd: 1536px + (2 * $gap), // $fullhd: 1536px + (2 * $gap);\n  fullhdxl: 1848px + (2 * $gap), // $fullhdxl: 1848px + (2 * $gap);\n);\n\n// Mixins for media queries, created as mobile first\n@mixin screen($key) {\n  $size: map-get($breakpoints, $key);\n\n  @media only screen and (min-width: $size) {\n    @content;\n  }\n}\n","@use '../abstracts' as *;\n\nbody {\n  position: relative;\n  overflow-x: hidden;\n  // background-color: var(--clr-black);\n}\n\n.main {\n  position: relative;\n}\n",".container {\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n  padding-right: var(--container-padding);\n  padding-left: var(--container-padding);\n}\n","/*\nPlaceholder image size class\n*/\n%image-size {\n  width: 100%;\n  height: 100%;\n  max-height: 100%;\n  object-position: center;\n}\n\n/*\nconstant aspect ratio container/media (image/video)\ncontainer needs also extra added padding-top\n*/\n.ar-container {\n  position: relative;\n  width: 100%;\n  height: 0;\n  overflow: hidden;\n}\n\n.ar-media {\n  @extend %image-size;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  object-fit: cover;\n}\n\n/*\nMixins for image fitted inside container\n*/\n$image-type: (\n  cover: cover,\n  contain: contain,\n);\n\n@each $type, $value in $image-type {\n  .image-fit-#{$type} {\n    @extend %image-size;\n    object-fit: $value;\n  }\n}\n\n/*\nClass used for @iconfu/svg-inject library\n*/\nimg.injectable {\n  visibility: hidden;\n}\n",".sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  white-space: nowrap;\n  border: 0;\n  clip: rect(0, 0, 0, 0);\n}\n","@use '../abstracts' as *;\n\n.accordion {\n  transition: all 250ms;\n\n  .accordion__item {\n    position: relative;\n  }\n\n  .accordion__title {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    font-weight: 600;\n    font-size: 1.4rem;\n    line-height: 1.2;\n    background-color: transparent;\n    border: none;\n    cursor: pointer;\n  }\n\n  .accordion__title__name {\n  }\n\n  .accordion__title__toggler {\n    display: flex;\n    width: 5rem;\n    height: 5rem;\n    transform-origin: center;\n    transition: transform 250ms;\n  }\n\n  .accordion__title[aria-expanded=\"false\"] {\n    .accordion__title__toggler {\n      transform: scaleY(1);\n    }\n  }\n\n  .accordion__title[aria-expanded=\"true\"] {\n    .accordion__title__toggler {\n      transform: scaleY(-1);\n    }\n  }\n\n  .accordion__content {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    overflow: hidden;\n    transition: all 200ms linear;\n  }\n\n  .accordion__text {\n    padding-top: 1.7rem;\n    padding-bottom: 1.7rem;\n    font-size: 1.2rem;\n    line-height: 1.8rem;\n\n    p:not(:last-of-type) {\n      margin-bottom: 1rem;\n    }\n  }\n}\n",".btn {\n  --h-pad: 2.5rem;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: auto;\n  height: 3.6rem;\n  padding-right: var(--h-pad);\n  padding-left: var(--h-pad);\n  font-size: 1rem;\n  font-family: sans-serif;\n  line-height: 1.2rem;\n  text-align: center;\n  text-decoration: none;\n  cursor: pointer;\n  transition: all 150ms;\n\n  &--black {\n    color: var(--clr-white);\n    background-color: var(--clr-black);\n\n    &:hover,\n    &:focus {\n    }\n  }\n}\n"]}